Repo URL: https://github.com/KastroVKiran/DynamoDB_AWS_Project.git

1. Create IAM Role 
'Check' AWS Service ---> use case: EC2, 'Check' EC2 ---> Next ---> Add 'DynamoDBFullAccess' ---> Next ---> Name: Game-Role ---> Create Role

2. Launch VM (Amazon Linux 2 AMI, t2.micro, Open Port 5000) ---> Advanced ---> IAM Instance Profile: Select the IAM Role created above, Metadata accessible: Enabled, Metadata Version: V1 and V2 (token optional) [This metadata will help us to get the metadata generated by IAM Role we have attached] ---> Launch VM

3. Connect to the VM
sudo su

Installation Steps
----------------------------
Install Development Tools and Dependencies
Installs essential development tools and libraries needed for compiling and building software.
sudo yum groupinstall -y "Development Tools"

Installs development headers and libraries for OpenSSL, bzip2, and libffi, required for Python.
sudo yum install -y openssl-devel bzip2-devel libffi-devel

Install Python 2.7.18
Downloads Python 2.7.18, extracts it, configures the build with optimizations enabled, and installs it without replacing the system-provided Python.
cd /usr/src
sudo wget https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tgz
sudo tar xzf Python-2.7.18.tgz
cd Python-2.7.18
sudo ./configure --enable-optimizations
sudo make altinstall

Verify the installed Python version.
python2.7 -V
==============================================
Additional Commands;
./configure --enable-optimizations
make altinstall

/usr/local/bin/python2.7 --version
/usr/local/bin/python2.7 get-pip.py
ln -s /usr/local/bin/python2.7 /usr/bin/python
python --version

==============================================
Install pip for Python 2.7
Downloads and installs pip for Python 2.7.
wget https://bootstrap.pypa.io/pip/2.7/get-pip.py
python get-pip.py

Install Python Packages
Installs Flask, Boto (for AWS SDK), and configparser Python packages using pip.
pip install Flask
pip install boto
pip install configparser

Install Git
Installs Git, a version control system.
yum install git -y

Clone the TicTacToe Project Repository
Clones the TicTacToe project repository from GitHub into the /home/ec2-user/ directory.

cd /home/ec2-user/
git clone https://github.com/KastroVKiran/DynamoDB_AWS_Project.git


After executing the above last command ---> ls ---> cd <ClonedRepoName> ---> ls ---> You will see all the files ---> We need to do some configurations ---> vi config ---> Change the region and endpoint as per the region code ---> esc ---> :wq ---> vi config.ini ---> Here also change the region ---> esc ---> :wq

Lets run the application.py file which is there inside the cloned repo
python application.py --config config.ini --mode service --endpoint dynamodb.ap-south-1.amazonaws.com --serverPort 5000

Access the app [Chrome browser] ---> <PublicIP>:5000 ---> You will see App ---> Enter any name on the top right side next to Login and click on Login ---> Click on 'Create Table' ---> Goto Dynamo DB, you will see 'Games' table. This table got created because of the setupDynamoDB.py file ---> Click on 'Games' tables ---> You dont see any items currently. Whenever we play a game, all those moves will be stored here. Lets see that practically.

Goto the browser where app is opened ---> Copy the public ip and 5000 and open the app in new browser [Firefox] (This is done because we need two players for the game) ---> Login as explained above

Goto Chrome browser ---> Click on 'Create' ---> Enter the name you have used to login in Firefox browser ---> Create game ---> Goto the Firefox browser and reload the page. You will see a request in Firefox browser. Accept it. ---> Play the game based on the 'turn' in the app. Finish the game successfully.

Lets verify the data in Dynamo DB ---> Goto Dynamo DB ---> Open the 'games'  ---> Click on 'Scan or query items' ---> 'Check' Scan ---> Click on RUN ---> You will see the details. ---> To know more details of the played game, click on the item and you can see each and every move got stored.
